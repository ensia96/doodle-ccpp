// 시프트(shift) : 옮기다

// 20 == 00010110(2)
// 왼쪽으로 시프트 1번   : 00101100(2)
// 오른쪽으로 시프트 3번 : 00000101(2)

// 왼쪽으로 시프트   : <<
// 오른쪽으로 시프트 : >>

#include <stdio.h>

int main()
{
    char a = 22;

    printf("%d\n", a << 1); // 44
    printf("%d\n", a << 3); // 176
    printf("%d\n", a << 6); // 1408 -> 00010110000000(2) -> C언어에서는 이 자료를 담기 위해 자동으로 자료형을 바꿈
    printf("%d\n", a >> 1); // 11
    printf("%d\n", a >> 3); // 2    -> 0000001011(2) -> 00000010(2)
    printf("%d\n", a >> 6); // 0

    // char 형은 -128 ~ 127 사이의 숫자만 나타낼 수 있음
    // 시프트 연산한 자료를 char 형 자료에 대입하면, char 형의 크기만큼만 자리수가 저장됨
    // 시프트 연산의 결과는 진짜로 비트를 추가하는 식으로 수행됨 -> 자료형에 담길 때 자동으로 잘릴 뿐
}
